Design Pattern - Basic 23 design patterns practise

[CONTAINS]
1. Factory
2. Abstract Factory
3. Singleton
4. Builder
5. Prototype

6. Bridge
7. Adapter
8. Decorator
9. Composite
10. Flyweight
11. Facade
12. Proxy

13. Template
14. Strategy
15. State
16. Observer
17. Memento
18. Mediator
19. Command
20. Visitor
21. Chain of Responsibility
22. Iterator
23. Interpreter

[BUILD]
1. mkdir build
2. cd build
3. cmake ..
4. make

[TESTING]
for testing, type
make test
then check result in build/Testing/

[INSTALL] - not supported yet
run cmake -DCMAKE_INSTALL_PREFIX={prefix}
then run
make install
by default, install binaries into build/bin

[BUILD CONFIGURATION]
set the configuration by passing
-DBUILD_CONFIGURATION={DEBUG|RELEASE}
to cmake

[TOOLS]
Tools are provided in dir tools, which could be invoked for design_pattern
on any PWD
currently contents:


class_add.sh			add .h, .cpp files for class with name specified, with 							includes basic construct func and other informations
						in header files

pattern_add.sh			add pattern sub-project, with cmake script, default cla							files and added pattern name to pattern_config.cmake

pattern_build.sh		build pattern in dest build directory

pattern_del.sh			remove pattern sub-project from current project:
						1. clear the code dir
						2. remove pattern info in pattern_config.cmake

pattern_rename.sh		rename a pattern

pattern_common.sh		public functions defines

[LOG]
basic log provided in tools/log.h

